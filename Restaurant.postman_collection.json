{
	"info": {
		"_postman_id": "5dcabe13-2221-4999-b144-68afbc2af823",
		"name": "Restaurant",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14504924"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.data).to.be.a(\"array\");",
									"    // Have at least one admin",
									"    pm.expect(jsonData.data.length > 0);",
									"    pm.expect(jsonData.data[0]).to.be.a(\"object\");",
									"",
									"    pm.expect(jsonData.data[0].id).to.be.a(\"string\");",
									"    pm.expect(jsonData.data[0].username).to.be.a(\"string\");",
									"    pm.expect(jsonData.data[0].password_hash).to.be.a(\"string\");",
									"    pm.expect(jsonData.data[0].role).to.be.oneOf([\"WAITER\", \"CASHIER\", \"ADMIN\"])",
									"    pm.expect(jsonData.data[0].created_at).to.be.a(\"string\");",
									"    pm.expect(jsonData.data[0].updated_at).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 06:29:39 GMT"
								},
								{
									"key": "Content-Length",
									"value": "259"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": \"17dfe496-c811-43fa-adc3-738e2d853374\",\n            \"username\": \"aryahmph\",\n            \"password_hash\": \"$2a$10$OAw5Ic7CoPOowHnuxYamFOrfF8b9B1iqGGM5R.iH2BPyMGfGCEV22\",\n            \"role\": \"ADMIN\",\n            \"created_at\": \"2022-06-15T02:56:54.358025Z\",\n            \"updated_at\": \"2022-06-15T02:56:54.358025Z\"\n        }\n    ]\n}"
						},
						{
							"name": "Token Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 06:31:56 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 401,\n    \"message\": \"token not valid\",\n    \"errors\": null\n}"
						}
					]
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.data).to.be.a(\"object\");",
									"    pm.expect(jsonData.data.id).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"artamananda\",\n    \"password\": \"5sBHnfcLe\",\n    \"role\": \"CASHIER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Already Exist",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"artamananda\",\n    \"password\": \"5sBHnfcLe\",\n    \"role\": \"CASHIER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 06:44:02 GMT"
								},
								{
									"key": "Content-Length",
									"value": "61"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"message\": \"username already exist\",\n    \"errors\": null\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"artamananda\",\n    \"password\": \"5sBHnfcLe\",\n    \"role\": \"CASHIER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 06:45:08 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"a891a970-9694-4af6-8b29-e1cfd04750f4\"\n    }\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"artamananda\",\n    \"password\": \"5sBHnfcLe\",\n    \"role\": \"a\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 06:46:04 GMT"
								},
								{
									"key": "Content-Length",
									"value": "130"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"message\": \"Key: 'AddUser.role' Error:Field validation for 'role' failed on the 'oneof' tag\",\n    \"errors\": {\n        \"role\": \"oneof\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.data).to.be.a(\"object\");",
									"    pm.expect(jsonData.data.id).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"artamananda3\",\n    \"role\": \"CASHIER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/a891a970-9694-4af6-8b29-e1cfd04750f4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"a891a970-9694-4af6-8b29-e1cfd04750f4"
							]
						}
					},
					"response": [
						{
							"name": "Already exist",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"artamananda2\",\n    \"role\": \"CASHIER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/a891a970-9694-4af6-8b29-e1cfd04750f4",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"a891a970-9694-4af6-8b29-e1cfd04750f4"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 07:31:38 GMT"
								},
								{
									"key": "Content-Length",
									"value": "61"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"message\": \"username already exist\",\n    \"errors\": null\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"artamananda3\",\n    \"role\": \"CASHIER\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/a891a970-9694-4af6-8b29-e1cfd04750f4",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"a891a970-9694-4af6-8b29-e1cfd04750f4"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 07:32:16 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"a891a970-9694-4af6-8b29-e1cfd04750f4\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.data).to.be.a(\"object\");",
									"    pm.expect(jsonData.data.id).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/a891a970-9694-4af6-8b29-e1cfd04750f4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"a891a970-9694-4af6-8b29-e1cfd04750f4"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users/a891a970-9694-4af6-8b29-e1cfd04750f4",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"a891a970-9694-4af6-8b29-e1cfd04750f4"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 08:20:04 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"a891a970-9694-4af6-8b29-e1cfd04750f4\"\n    }\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"1"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 08:20:39 GMT"
								},
								{
									"key": "Content-Length",
									"value": "127"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"message\": \"Key: 'DeleteUser.ID' Error:Field validation for 'ID' failed on the 'uuid4' tag\",\n    \"errors\": {\n        \"ID\": \"uuid4\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.data).to.be.a(\"object\");",
									"",
									"    pm.expect(jsonData.data.id).to.be.a(\"string\");",
									"    pm.expect(jsonData.data.username).to.be.a(\"string\");",
									"    pm.expect(jsonData.data.password_hash).to.be.a(\"string\");",
									"    pm.expect(jsonData.data.role).to.be.oneOf([\"WAITER\", \"CASHIER\", \"ADMIN\"])",
									"    pm.expect(jsonData.data.created_at).to.be.a(\"string\");",
									"    pm.expect(jsonData.data.updated_at).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/17dfe496-c811-43fa-adc3-738e2d853374",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"17dfe496-c811-43fa-adc3-738e2d853374"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/users/17dfe496-c811-43fa-adc3-738e2d853374",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"17dfe496-c811-43fa-adc3-738e2d853374"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jun 2022 04:10:34 GMT"
								},
								{
									"key": "Content-Length",
									"value": "257"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"17dfe496-c811-43fa-adc3-738e2d853374\",\n        \"username\": \"aryahmph\",\n        \"password_hash\": \"$2a$10$OAw5Ic7CoPOowHnuxYamFOrfF8b9B1iqGGM5R.iH2BPyMGfGCEV22\",\n        \"role\": \"ADMIN\",\n        \"created_at\": \"2022-06-15T02:56:54.358025Z\",\n        \"updated_at\": \"2022-06-15T02:56:54.358025Z\"\n    }\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{auth_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "Login Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.data).to.be.a(\"object\");",
									"    pm.expect(jsonData.data.access_token).to.be.a(\"string\");",
									"});",
									"",
									"pm.environment.set(\"auth_token\", jsonData.data.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"aryahmph\",\n    \"password\":\"26cLbYUxc4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\":\"aryahmph\",\n    \"password\":\"26cLbYUxc4\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 03:23:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "192"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjE3ZGZlNDk2LWM4MTEtNDNmYS1hZGMzLTczOGUyZDg1MzM3NCIsImV4cCI6MTY1NTI5NTgwMn0.hHWjwUVPfLJdhf05mHRsbg6kdnpqZ_Km2ZTEiRi6Ejs\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login Fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 10000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", () => {",
									"  pm.expect(jsonData).to.be.an(\"object\");",
									"  pm.expect(jsonData.code).to.be.a(\"number\");",
									"  pm.expect(jsonData.message).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"aryahmph\",\n    \"password\":\"random_pass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": [
						{
							"name": "Not match",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\":\"aryahmph\",\n    \"password\":\"random_pass\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 03:26:57 GMT"
								},
								{
									"key": "Content-Length",
									"value": "56"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 401,\n    \"message\": \"wrong credentials\",\n    \"errors\": null\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\":\"aryahmph\",\n    \"password\":\"random\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/auth",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 15 Jun 2022 03:28:03 GMT"
								},
								{
									"key": "Content-Length",
									"value": "136"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"message\": \"Key: 'Login.password' Error:Field validation for 'password' failed on the 'gte' tag\",\n    \"errors\": {\n        \"password\": \"gte\"\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "category",
			"item": [
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    if (jsonData.data !== null) {",
									"        pm.expect(jsonData.data).to.be.a(\"array\");",
									"        pm.expect(jsonData.data[0]).to.be.a(\"object\");",
									"",
									"        pm.expect(jsonData.data[0].id).to.be.a(\"string\");",
									"        pm.expect(jsonData.data[0].name).to.be.a(\"string\");",
									"        pm.expect(jsonData.data[0].created_at).to.be.a(\"string\");",
									"        pm.expect(jsonData.data[0].updated_at).to.be.a(\"string\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/categories",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jun 2022 04:13:00 GMT"
								},
								{
									"key": "Content-Length",
									"value": "160"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": \"88f0f00c-e081-4204-923f-53715ae8cde0\",\n            \"name\": \"Makanan\",\n            \"created_at\": \"2022-06-15T16:46:52.018362Z\",\n            \"updated_at\": \"2022-06-15T16:46:52.018362Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Content-Type header is application/json\", () => {",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"pm.test(\"Test data type of the response\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.data).to.be.a(\"object\");",
									"    pm.expect(jsonData.data.id).to.be.a(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pempek\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Pempek\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categories",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jun 2022 04:34:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"f1c428d8-ea65-4b0d-bc45-da1801d483b1\"\n    }\n}"
						},
						{
							"name": "Already Exist",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Pempek\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categories",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jun 2022 04:43:34 GMT"
								},
								{
									"key": "Content-Length",
									"value": "57"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"message\": \"name already exist\",\n    \"errors\": null\n}"
						},
						{
							"name": "Required",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categories",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jun 2022 04:44:09 GMT"
								},
								{
									"key": "Content-Length",
									"value": "137"
								}
							],
							"cookie": [],
							"body": "{\n    \"code\": 400,\n    \"message\": \"Key: 'Category.name' Error:Field validation for 'name' failed on the 'required' tag\",\n    \"errors\": {\n        \"name\": \"required\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/f1c428d8-ea65-4b0d-bc45-da1801d483b1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"f1c428d8-ea65-4b0d-bc45-da1801d483b1"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/categories/f1c428d8-ea65-4b0d-bc45-da1801d483b1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categories",
										"f1c428d8-ea65-4b0d-bc45-da1801d483b1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jun 2022 04:47:36 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"f1c428d8-ea65-4b0d-bc45-da1801d483b1\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Aneka Pempek\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categories/9f87cfde-c781-4284-a7a3-cde884c07d0e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"9f87cfde-c781-4284-a7a3-cde884c07d0e"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"Aneka Pempek\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categories/9f87cfde-c781-4284-a7a3-cde884c07d0e",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categories",
										"9f87cfde-c781-4284-a7a3-cde884c07d0e"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Thu, 16 Jun 2022 05:06:24 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"9f87cfde-c781-4284-a7a3-cde884c07d0e\"\n    }\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{auth_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}